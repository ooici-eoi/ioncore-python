# Central configuration file for ION services and modules. Eval'ed as dict.
# Entries are accessed using the __name__ of their module as key to a dict
# with the property key pointing to a value.
# Startup scripts use 'startup' as key.
# Do not modify this file locally! Set overrides in ionlocal.config
{
'ion.core.bootstrap':{
    'ccagent_cfg' : 'res/config/ionccagent.cfg',
    'coreservices_cfg':'res/config/ioncoreservices.cfg',
    'services_cfg':'res/config/ionservices.cfg',
    'messaging_cfg':'res/config/ionmessaging.cfg',
},

'ion.core.ioninit':{
    'loglevels' : 'res/logging/loglevels.cfg',
    'loglevelslocal' : 'res/logging/loglevelslocal.cfg',
},

'ion.core.cc.container':{
    'master_off':False,
    'interceptor_system':'res/config/ion_interceptors.cfg',
},

'ion.core.cc.cc_agent':{
    'announce':False,
},

'ion.core.cc.modloader':{
    'load_modules':True,
    'modules_cfg':'res/config/ionmodules.cfg',
},

'ion.core.intercept.encryption':{
    'encrypt':False,
    'encrypt_mod':'Crypto.Cipher.AES',
    'encrypt_key':'secretkey/len16b',
    'encrypt_pad':16,
},

'ion.core.intercept.signature':{
    'msg_sign':False,
},

'ion.core.pack.app_manager':{
    'ioncore_app':'res/apps/ioncore.app',
},

'ion.core.process.process':{
    'conversation_log':False,
    'fail_fast':True,
    'rpc_timeout':15,
},

'ion.data.backends.irodsstore': {
    'irodsHost': 'ec2-204-236-137-245.us-west-1.compute.amazonaws.com',
    'irodsPort':'1247',
    'irodsDefResource':'ooi-test-resc1',
    'irodsOoiCollection':'/ooi-test-cluster1/home/testuser/OOI',
    'irodsUserName':'testuser',
    'irodsUserPasswd':'test',
    'irodsZone':'ooi-test-cluster1',
},

'ion.data.backends.cassandra':{
    'default_keyspace':'Datastore',
    'default_colfamily':'DS1',
    'default_cf_super':True,
    'default_namespace':None,
    'default_key':None
},


'ion.data.backends.cassandra_pycassa':{
    'default_keyspace':'Datastore',
    'default_colfamily':'DS1',
    'default_cf_super':True,
    'default_namespace':None,
    'default_key':None
},
'ion.resources.description_utility':[
    'ion.resources.cei_resource_descriptions',
    'ion.resources.coi_resource_descriptions',
    'ion.resources.ipaa_resource_descriptions',
    'ion.resources.sa_resource_descriptions',
    'ion.resources.dm_resource_descriptions'
    ],

'ion.services.coi.attributestore':{
    'backend_class':'ion.services.dm.preservation.store.Store',
#    'backend_class':'ion.data.backends.cassandra.CassandraStore',
    'backend_args':{
        'cass_host_list':['amoeba.ucsd.edu:9160'],
        'keyspace':'Datastore',
        'colfamily':'DS1',
        'cf_super':True,
        'namespace':None,
    },
},

'ion.services.coi.datastore':{
    'backend_class':'ion.services.dm.preservation.store.Store',
#    'backend_class':'ion.data.backends.cassandra.CassandraStore',
    'backend_args':{
        'cass_host_list':['amoeba.ucsd.edu:9160'],
        'keyspace':'Datastore',
        'colfamily':'DS1',
        'cf_super':True,
        'namespace':None,
    },
},

'ion.services.coi.resource_registry_beta.resource_registry':{
    'datastore_service':'datastore'},

'ion.services.cei.dtrs':{
    'deployable_types':'res/config/deployable_types.cfg'
    },

'ion.services.dm.util.url_manipulation':{
    'local_dir' : '/tmp/',
    'cache_hostname' : 'localhost',
    'cache_portnum' : '80',
},

'ion.services.dm.util.test.test_daptools':{
    'test_dir': '../ion/services/dm/util/test/test_files',
},

'ion.services.sa.proxy' : {
    'proxy_port' : '8100',
},

'ion.test.iontest':{
    'broker_host': 'amoeba.ucsd.edu',
    'broker_port': 5672,
    'broker_vhost': '/',
    'broker_heartbeat':0,
},

'startup.bootstrap1':{
    'coreservices_cfg':'res/config/ioncoreservices.cfg',
    'services_cfg':'res/config/ionservices1.cfg',
    'messaging_cfg':'res/config/ionmessaging.cfg'
},

'startup.bootstrap-dx':{
    'services_cfg' : 'res/config/iondx_services.cfg',
    'messaging_cfg': 'res/config/ionmessaging.cfg'
},

'startup.pubsub':{
    'services_cfg' : 'res/config/ionpubsub.cfg',
    'messaging_cfg': 'res/config/ionmessaging.cfg'
},

'startup.agentreg':{
    'services_cfg' : 'res/config/ionagentreg.cfg',
    'messaging_cfg': 'res/config/ionmessaging.cfg'
},

'startup.instrreg':{
    'services_cfg' : 'res/config/ioninstrreg.cfg',
    'messaging_cfg': 'res/config/ionmessaging.cfg'
},

'startup.prodreg':{
    'services_cfg' : 'res/config/ionprodreg.cfg',
    'messaging_cfg': 'res/config/ionmessaging.cfg'
},

'startup.servicereg':{
    'services_cfg' : 'res/config/ionservicereg.cfg',
    'messaging_cfg': 'res/config/ionmessaging.cfg'
},

'startup.resourcereg':{
    'services_cfg' : 'res/config/ionresourcereg.cfg',
    'messaging_cfg': 'res/config/ionmessaging.cfg'
},

# Entries in the following dict are overriding above config entries in tests:
'iontest_config_override':{

},
}
